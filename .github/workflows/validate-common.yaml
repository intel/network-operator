name: validation common
on:
  workflow_call:
    inputs:
      runner:
        required: true
        type: string

permissions:
  pull-requests: read # for golangci/golangci-lint-action to fetch pull requests
  contents: read

env:
  isubuntu: ${{ startsWith (inputs.runner, 'ubuntu') }}

jobs:
  golangci:
    name: Run lint
    runs-on: ${{ inputs.runner }}
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
        with:
          clean: true
      - uses: actions/setup-go@3041bf56c941b39c61721a86cd11f3bb1338122a # v5
        with:
          go-version-file: go.mod
          check-latest: true
          cache: false
      - run: |
          sudo apt install libpcap-dev
        if: ${{ env.isubuntu == 'true' }}
      - run: |
          make lint
  build:
    name: Build all
    runs-on: ${{ inputs.runner }}
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
        with:
          clean: true
      - uses: actions/setup-go@3041bf56c941b39c61721a86cd11f3bb1338122a # v5
        with:
          go-version-file: go.mod
          check-latest: true
          cache: false
      - run: |
          sudo apt install libpcap-dev
        if: ${{ env.isubuntu == 'true' }}
      - run: make build
      - run: make operator-image
      - run: make discover-image
  tests:
    name: Run tests
    runs-on: ${{ inputs.runner }}
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
        with:
          clean: true
      - uses: actions/setup-go@3041bf56c941b39c61721a86cd11f3bb1338122a # v5
        with:
          go-version-file: go.mod
          check-latest: true
          cache: false
      - run: |
          sudo apt install libpcap-dev
        if: ${{ env.isubuntu == 'true' }}
      - name: Run tests
        run: |
          make envtest
          make test
