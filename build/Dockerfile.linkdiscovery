# Copyright (c) 2025 Intel Corporation
# SPDX-License-Identifier: MIT

# Build the discover binary
FROM golang:1.23 AS builder

ARG TARGETOS
ARG TARGETARCH
ENV GO111MODULE=on
ENV CGOFLAGS="-trimpath -mod=readonly -buildmode=pie"
ENV GCFLAGS="all=-spectre=all -N -l"
ENV ASMFLAGS="all=-spectre=all"
ENV LDFLAGS="all=-linkmode=external -s -w"

WORKDIR /workspace
# Copy the Go Modules manifests
COPY go.mod go.sum ./

# cache deps before building and copying source so that we don't need to re-download as much
# and so that source changes don't invalidate our downloaded layer
RUN go mod download

# Install dependencies
RUN apt-get update && apt-get install -y --no-install-recommends libpcap0.8-dev

# Copy the go source
COPY cmd/discover/*.go cmd/discover/
COPY pkg/ pkg/

# Build
RUN CGO_ENABLED=1 GOOS=${TARGETOS:-linux} GOARCH=${TARGETARCH} GO111MODULE=${GO111MODULE} \
    go build $CGOFLAGS --gcflags="$GCFLAGS" --asmflags="$ASMFLAGS" --ldflags="$LDFLAGS"  -a -o discover \
    cmd/discover/main.go cmd/discover/gaudinet.go cmd/discover/network.go

# Verify binary build specs with checksec
ENV CHECKSEC_REF="Partial RELRO,No Canary found,NX enabled,PIE enabled,No RPATH,No RUNPATH,No Symbols,No,0,3"
RUN apt-get update -y && apt-get --no-install-recommends -y install file && \
    wget -q https://raw.githubusercontent.com/slimm609/checksec/refs/heads/main/checksec.bash -O checksec && \
    chmod +x checksec && \
   ./checksec --file=/workspace/discover --output=csv | grep -q "$CHECKSEC_REF"

RUN go get github.com/google/go-licenses && \
    go run github.com/google/go-licenses save ./... --save_path=licenses || \
    true

# TODO: consider using some other base image with required libraries copied into it.
FROM debian:stable-slim

RUN mkdir /source
WORKDIR /source

RUN sed -i 's/\(Types: deb\).*/\1 deb-src/' /etc/apt/sources.list.d/debian.sources && \
    apt-get update && apt-get install -y --no-install-recommends libpcap0.8 && \
    apt source libdbus-1-3 --download-only && \
    rm -rf /var/lib/apt/lists/*

COPY --from=builder /workspace/discover /discover
COPY --from=builder /workspace/licenses /licenses

USER root

ENTRYPOINT ["/discover"]
